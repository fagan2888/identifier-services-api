{
	"openapi": "3.0.0",
	"info": {
		"title": "Identifier Services API",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": ""
		}
	],
	"tags": [
		{
			"name": "users",
			"description": "Operate on users"
		},
		{
			"name": "publishers",
			"description": "Operate on publishers"
		}
	],
	"security": [
		{
			"httpBasic": []
		}
	],
	"paths": {
		"/users": {
			"post": {
				"summary": "Creates a new users",
				"tags": ["users"],
				"responses": {
					"200": {
						"description": "user response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"201": {
						"description": "User successfully created",
						"headers": {
							"Location": {
								"description": "",
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Malformed content"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized"
					},
					"413": {
						"description": "Request body is too large"
					}
				}
			}
		},

		"/users/{id}": {
			"get": {
				"summary": "Retrieve user information",
				"tags": ["users"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user to be retrieve user information",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": ""
					},
					"403": {
						"description": ""
					},
					"404": {
						"description": ""
					}
				}
			},
			"put": {
				"summary": "Update user information",
				"tags": ["users"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user needed to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "The user was created"
					},
					"204": {
						"description": "The user was updated"
					},
					"400": {
						"description": "malformed content"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized"
					},
					"404": {
						"description": "The user doesnot exist"
					},
					"422": {
						"description": "Invalid syntax"
					}
				}
			},
			"delete": {
				"summary": "Delete a user",
				"description": "The user is completely removed including all related records in the queue",
				"tags": ["users"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user needed to delete",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "The user was removed"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized"
					},
					"404": {
						"description": "Content not found"
					}
				}
			}
		},
		"users/{id}/password": {
			"post": {
				"summary": "Change user password",
				"tags": ["users"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "ID of user needed to change password",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Password Changed"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized"
					},
					"404": {
						"description": "Content not found"
					}
				}
			}
		},
		"users/query": {
			"post": {
				"summary": "Query for users",
				"tags": ["users"],
				"parameters": [
					{
						"name": "users",
						"in": "query",
						"description": "Query certain users",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Query returned "
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The user does not exist"
					}
				}
			}
		},

		"/publishers": {
			"post": {
				"summary": "Create a new publisher",
				"tags": ["publishers"],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"201": {
						"description": "New Publisher Created",
						"headers": {
							"Location": {
								"description": " ",
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Publisher does not exist or Bad Request"
					},
					"401": {
						"description": "Authentication failed or Unauthorized"
					},
					"403": {
						"description": "Forbidden or Not authorized"
					},
					"413": {
						"description": "Request body is too large"
					},
					"415": {
						"description": "Content type was not specified or Unsupported Media Type"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/{id}": {
			"get": {
				"summary": "Retrive a publisher",
				"tags": ["publishers"],
				"parameters": [
					{
						"name": "publisherId",
						"in": "path",
						"description": "ID of publisher to fetch publisher information",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			},
			"put": {
				"summary": "Update a publisher",
				"tags": ["publishers"],
				"parameters": [
					{
						"name": "publisherId",
						"in": "path",
						"description": "ID of publisher to fetch and update publisher information",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Publisher"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"201": {
						"description": "The publisher was updated",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"204": {
						"description": "No new content to be updated"
					},
					"400": {
						"description": "Malformed content or Bad request"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher does not exist"
					},
					"422": {
						"description": "Invalid syntax"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/query": {
			"post": {
				"summary": "Query for publishers",
				"tags": ["publishers"],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Query returned "
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher does not exist"
					}
				},
				"default": {
					"description": "unexpected error"
				}
			}
		},
		"/publishers/requests": {
			"post": {
				"summary": "Create a publisher creation request",
				"tags": ["publishers"],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"201": {
						"description": "New Publisher creation request created",
						"headers": {
							"Location": {
								"description": " ",
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Authentication failed or Unauthorized"
					},
					"403": {
						"description": "Forbidden or Not authorized"
					},
					"413": {
						"description": "Request body is too large"
					},
					"415": {
						"description": "Content type was not specified or Unsupported Media Type"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/request/{id}": {
			"get": {
				"summary": "Retrive a publisher creation request",
				"tags": ["publishers"],
				"parameters": [
					{
						"name": "publisherRequestId",
						"in": "path",
						"description": "ID of publisher request to fetch its information",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			},
			"delete": {
				"summary": "Delete a publisher creation request",
				"description": "The publisher creation request is removed",
				"tags": ["publishers"],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "The publisher creation request is removed"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			},
			"put": {
				"summary": "Update a publisher creation request",
				"tags": ["publishers"],
				"parameters": [
					{
						"name": "publisherRequestId",
						"in": "path",
						"description": "ID of publisher creation request to fetch its information",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Publisher"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"201": {
						"description": "The publisher creation request is updated",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"204": {
						"description": "No new content to be updated"
					},
					"400": {
						"description": "Malformed content or Bad request"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher creation request does not exist"
					},
					"422": {
						"description": "Invalid syntax"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/request/query": {
			"post": {
				"summary": "Query for publishers request",
				"tags": ["publishers"],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Query returned "
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher does not exist"
					}
				},
				"default": {
					"description": "unexpected error"
				}
			}
		},
		"/publishers/{id}/publications": {
			"post": {
				"summary": "Create a new publication",
				"tags": ["publications"],
				"parameters": [
					{
						"name": "publicationId",
						"in": "path",
						"description": "ID of a new publication",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "New Publication created"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher does not exist"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/{id}/publications/{id}": {
			"get": {
				"summary": "Retrive a publication's metadata",
				"tags": ["publications"],
				"parameters": [
					{
						"name": "publicationsId",
						"in": "path",
						"description": "ID of publications to fetch metadata informations",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			},
			"put": {
				"summary": "Update a publication metadata",
				"tags": ["publications"],
				"parameters": [
					{
						"name": "publicationId",
						"in": "path",
						"description": "ID of publication to fetch metadata informations",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Publisher"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"201": {
						"description": "The publication metadata is updated",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"204": {
						"description": "No new content to be updated"
					},
					"400": {
						"description": "Malformed content or Bad request"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"422": {
						"description": "Invalid syntax"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/{id}/publications/requests": {
			"post": {
				"summary": "Create a new publication request",
				"tags": ["publications"],
				"parameters": [
					{
						"name": "publicationRequestId",
						"in": "path",
						"description": "ID of publication request",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "New Publication request created"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher does not exist"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/{id}/publications/requests/{id}": {
			"get": {
				"summary": "Retrive a publication creation request",
				"tags": ["publications"],
				"parameters": [
					{
						"name": "publicationsRequestId",
						"in": "path",
						"description": "ID of publications creation request to fetch",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			},
			"delete": {
				"summary": "Delete a publisher request",
				"description": "The publisher creation request is removed",
				"tags": ["publications"],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "The publisher creation request is removed"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			},
			"put": {
				"summary": "Update a publications creation request",
				"tags": ["publications"],
				"parameters": [
					{
						"name": "publicationRequestId",
						"in": "path",
						"description": "ID of publication creation request to fetch",
						"require": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Publisher"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					},
					"201": {
						"description": "The publication's creation request is updated",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"204": {
						"description": "No new content to be updated"
					},
					"400": {
						"description": "Malformed content or Bad request"
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "No record found"
					},
					"422": {
						"description": "Invalid syntax"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
		"/publishers/{id}/publications/query": {
			"post": {
				"summary": "Query for publications",
				"tags": ["publications"],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Query returned "
					},
					"401": {
						"description": "Authentication failed"
					},
					"403": {
						"description": "Not authorized or Forbidden"
					},
					"404": {
						"description": "The publisher does not exist"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		}
	},

	"components": {
		"securitySchemes": {
			"httpBasic": {
				"type": "http",
				"scheme": "basic"
			}
		},
		"schemas": {
			"userMetadata": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"required": true,
						"unique": true,
						"description": "Identifier of the user metadata"
					},
					"preference": {
						"type": "object",
						"properties": {
							"defaultLanguage": {
								"type": "string",
								"required": true,
								"description": "Three-letter language code. Defaults to the language defined in the publisher metadata (In case of the user having permissions to multiple publishers, the default is taken from the first publisher in the list or permissions)."
							}
						}
					},
					"lastUpdated": {
						"type": "object",
						"properties": {
							"timestamp": {
								"type": "string",
								"required": true,
								"description": "Last update timestamp in ISO 8601 Date time string format YYYY-MM-DDTHH:mm:ss.sssZ"
							},
							"user": {
								"type": "string",
								"required": true,
								"description": "The id of the user who did the update."
							}
						}
					}
				}
			},
			"usersRequest": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"required": true,
						"unique": true,
						"description": "Identifier if the user creationRequest"
					},
					"userId": {
						"type": "string",
						"required": false,
						"description": "Identifier of the created user"
					},
					"publishers": {
						"type": "string",
						"required": true,
						"description": "An array of identifiers of the publishers the user should have permission to."
					},
					"givenName": {
						"type": "string",
						"required": true,
						"description": "The user's given name"
					},
					"familyName": {
						"type": "string",
						"required": true,
						"description": "The user's family name"
					},
					"email": {
						"type": "string",
						"format": "email",
						"required": true,
						"description": "The user's email address"
					},
					"notes": {
						"type": "array",
						"items": {
							"type": "string",
							"required": true,
							"description": "notes"
						},
						"required": true,
						"description": "A list of notes"
					},
					"lastUpdated": {
						"type": "object",
						"properties": {
							"timestamp": {
								"type": "string",
								"required": true,
								"description": "Last update timestamp in ISO 8601 Date time string format YYYY-MM-DDTHH:mm:ss.sssZ"
							},
							"user": {
								"type": "string",
								"required": true,
								"description": "The id of the user who did the update."
							}
						}
					}
				}
			},
			"PublisherMetadata": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"required": true,
						"unique": true,
						"description": "Identifier of the created publisher"
					},
					"lastUpdated": {
						"type": "object",
						"properties": {
							"timestamp": {
								"type": "string",
								"required": true,
								"description": "Last update timestamp in ISO 8601 Date time string format YYYY-MM-DDTHH:mm:ss.sssZ"
							},
							"user": {
								"type": "string",
								"required": true,
								"description": "The id of the user who did the update."
							}
						}
					},
					"name": {
						"type": "string",
						"required": true,
						"description": "Publisher's Name"
					},
					"language": {
						"type": "string",
						"required": true,
						"description": "Three-letter language code indicating the default language for the publisher"
					},
					"metadataDelivery": {
						"type": "string",
						"required": true,
						"enum": ["manual", "external"],
						"default": "manual",
						"description": "The publisher's metadata delivery type. Either manual or external."
					},
					"primaryContact": {
						"type": "array",
						"items": {
							"type": "string",
							"required": true,
							"description": "Email addresses of user identifier"
						},
						"required": true,
						"description": "Primary contact points. An array of strings which can be email addresses or user identifiers."
					},
					"email": {
						"type": "string",
						"format": "email",
						"required": false,
						"description": "Public email address of the publisher"
					},
					"website": {
						"type": "string",
						"required": false,
						"description": "URL of the publisher's public website"
					},
					"aliases": {
						"type": "array",
						"items": {
							"type": "string",
							"required": false,
							"description": "alternate name"
						},
						"required": false,
						"description": "A list of alternative publisher's names"
					},
					"notes": {
						"type": "array",
						"items": {
							"type": "string",
							"required": true,
							"description": "notes"
						},
						"required": true,
						"description": "A list of notes"
					},
					"activity": {
						"type": "object",
						"properties": {
							"active": {
								"type": "boolean",
								"default": true,
								"required": true,
								"description": "Whether the publisher is active or not."
							},
							"yearInactivated": {
								"type": "number",
								"required": false,
								"description": "The year the publisher became inactive. Can only be present when active is false."
							}
						}
					},
					"streetAddress": {
						"type": "object",
						"properties": {
							"address": {"type": "string", "required": true},
							"city": {"type": "string", "required": true},
							"zip": {"type": "string", "required": true}
						}
					}
				}
			},
			"PublisherRequest": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"unique": true,
						"required": true,
						"description": "Identifier of the created publisher creation request"
					},
					"name":{
						"type":"string",
						"required":true,
						"description":"Publisher's name"
					}
				}
			},
			"Publications": {
				"type": "object",
				"properties": {
					"id": {"type": "string", "required": true, "unique": true},
					"lastUpdated": {
						"type": "object",
						"properties": {
							"timestamp": {"type": "string", "required": true},
							"user": {"type": "string", "required": true}
						}
					},
					"name": {"type": "string", "required": true},
					"language": {"type": "string", "required": true},
					"email": {"type": "string", "format": "email", "required": false},
					"website": {"type": "string", "required": false},
					"publicationEstimate": {"type": "number", "required": false},
					"notes": {"type": "string", "required": false}
				}
			}
		}
	}
}
